x = np.linspace(0, 1, 10)
y = np.sin(2*np.pi*x)
linear_interp = scipy.interpolate.interp1d(x, y)
cubic_interp = scipy.interpolate.interp1d(x, y, kind='cubic')
fine_x = np.linspace(0, 1, 50)
y_fromlinearinterp = linear_interp(fine_x)
y_fromcubicinterp = cubic_interp(fine_x)

figure(figsize=(7,4.5))
plot(x, y, 'o', ms=6, label='points originaux')
plot(fine_x, y_fromlinearinterp, '-', lw=2, label='interpolation lineaire')
plot(fine_x, y_fromcubicinterp, '-', lw=2, label='interpolation cubique')
ylim(-1.02, 1.02)
legend()
